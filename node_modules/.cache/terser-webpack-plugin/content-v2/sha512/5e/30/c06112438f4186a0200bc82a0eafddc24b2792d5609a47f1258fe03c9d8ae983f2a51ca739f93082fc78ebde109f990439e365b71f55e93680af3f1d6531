{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{498:function(s,t,a){\"use strict\";a.r(t);var n=a(41),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":s.$parent.slotKey}},[a(\"blockquote\",[a(\"p\",[s._v(\"slice 类型存什么？ make 和 new？ slice 和数组？扩容规则？\")]),s._v(\" \"),a(\"p\",[s._v(\"form：\"),a(\"a\",{attrs:{href:\"https://www.bilibili.com/video/BV1CV411d7W8\",target:\"_blank\",rel:\"noopener noreferrer\"}},[s._v(\"幼麟实验室\"),a(\"OutboundLink\")],1)])]),s._v(\" \"),a(\"h2\",{attrs:{id:\"slice类型存什么\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#slice类型存什么\"}},[s._v(\"#\")]),s._v(\" slice 类型存什么❓\")]),s._v(\" \"),a(\"ol\",[a(\"li\",[a(\"p\",[s._v(\"切片是什么结构？\")]),s._v(\" \"),a(\"p\",[s._v(\"slice 由三部分组成，分别是 data、len、cap\")])])]),s._v(\" \"),a(\"ul\",[a(\"li\",[s._v(\"data：元素存哪里\")]),s._v(\" \"),a(\"li\",[s._v(\"len： 已存元素\")]),s._v(\" \"),a(\"li\",[s._v(\"cap： 可存元素\")])]),s._v(\" \"),a(\"div\",{staticClass:\"language-go line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-go\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// 申明切片\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"var\")]),s._v(\" ints \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),a(\"span\",{pre:!0,attrs:{class:\"token builtin\"}},[s._v(\"int\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// 此时变量ints中 [data=nil | 0 | 0 ]\")]),s._v(\"\\n\")])]),s._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),a(\"br\")])]),a(\"h2\",{attrs:{id:\"make和new\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#make和new\"}},[s._v(\"#\")]),s._v(\" make 和 new❓\")]),s._v(\" \"),a(\"blockquote\",[a(\"p\",[s._v(\"make\")])]),s._v(\" \"),a(\"ol\",[a(\"li\",[s._v(\"分配\"),a(\"strong\",[s._v(\" cap 大小\")]),s._v(\"的\"),a(\"strong\",[s._v(\"底层数组\")]),s._v(\"空间\")]),s._v(\" \"),a(\"li\",[s._v(\"全部\"),a(\"strong\",[s._v(\"初始化为 0\")])])]),s._v(\" \"),a(\"div\",{staticClass:\"language-go line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-go\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// make初始化\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"var\")]),s._v(\" ints \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),a(\"span\",{pre:!0,attrs:{class:\"token builtin\"}},[s._v(\"int\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"make\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),a(\"span\",{pre:!0,attrs:{class:\"token builtin\"}},[s._v(\"int\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"2\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"5\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// 变量ints中 [data=(指针)[0,0,0,0,0] | 2 | 5 ]\")]),s._v(\"\\n\")])]),s._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),a(\"br\")])]),a(\"p\",[s._v(\"添加一个元素，由于已经使用了两个元素，所以从第三个元素开始添加\")]),s._v(\" \"),a(\"div\",{staticClass:\"language-go line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-go\"}},[a(\"code\",[s._v(\"ints \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"append\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"ints\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"1\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"\\t\\t\\t \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// 变量ints中 [data=(指针)[0,0,1,0,0] | 3 | 5 ]\")]),s._v(\"\\n\")])]),s._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),a(\"br\")])]),a(\"p\",[s._v(\"在 len 范围内的元素可以安全读写，超出范围则会 panic\")]),s._v(\" \"),a(\"div\",{staticClass:\"language-go line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-go\"}},[a(\"code\",[s._v(\"ints\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"0\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"1\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// right\")]),s._v(\"\\nints\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"3\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"1\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// panic\")]),s._v(\"\\n\")])]),s._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),a(\"br\")])]),a(\"p\",[a(\"img\",{attrs:{src:\"https://sjc04pap001files.storage.live.com/y4m4WO4mb9HbE7K9zg9qoOk4KD03oc8tEAAxCvQMnSStXxu9GT-RpZHHrRx7lfmPw4bbJ0cspzWPI9SEssYOYDdtZ38s71PCSWOPug9j-4FawHMiv_rKqgVmG67i0NdHtsJzvn7XQ_hv7QVrbOFEU0OV0u6diThpDObxAA4UsulRmqcQTJQOaPS0WLwQIXzyW6f?width=660&height=168&cropmode=none\",alt:\"\"}})]),s._v(\" \"),a(\"hr\"),s._v(\" \"),a(\"blockquote\",[a(\"p\",[s._v(\"new\")])]),s._v(\" \"),a(\"ol\",[a(\"li\",[s._v(\"不会分配底层数组的地址空间\")]),s._v(\" \"),a(\"li\",[s._v(\"返回值为\"),a(\"strong\",[s._v(\" slice 的起始指针\")])])]),s._v(\" \"),a(\"div\",{staticClass:\"language-go line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-go\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// new初始化\")]),s._v(\"\\nps \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":=\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"new\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),a(\"span\",{pre:!0,attrs:{class:\"token builtin\"}},[s._v(\"string\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// [data = nil | 0 | 0 ]\")]),s._v(\"\\n\")])]),s._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),a(\"br\")])]),a(\"p\",[s._v(\"由于没有底层数组，直接操作 ps 会 panic\")]),s._v(\" \"),a(\"div\",{staticClass:\"language-go line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-go\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"*\")]),s._v(\"ps\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"0\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"eggo\"')]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// panic\")]),s._v(\"\\n\")])]),s._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),a(\"br\")])]),a(\"p\",[s._v(\"通过\"),a(\"strong\",[s._v(\" append ()\"),a(\"strong\",[s._v(\" 函数来\")]),s._v(\"分配底层数组\")])]),s._v(\" \"),a(\"div\",{staticClass:\"language-go line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-go\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"*\")]),s._v(\"ps \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"append\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"*\")]),s._v(\"ps\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"eggo\"')]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"\\n\")])]),s._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),a(\"br\")])]),a(\"p\",[a(\"img\",{attrs:{src:\"https://sjc04pap001files.storage.live.com/y4mB-57VPoby33VdyXkgS7rYuEZqS2wKRVbGT-VFHlkb478AcIsO9vE4oN4rHqq3pd1b6isQwug338QwNfl_YRFGx-8c1Rwp9h4rr4ROgFfkqfmUZWJBdC6RjjLGtba2hMwRiLaGYqlaEvjN-FZZ88vm-8CMc4lZltZZO1aaxdr3FKzzGAEoNBihJ3n5vNExU6Q?width=660&height=381&cropmode=none\",alt:\"\"}})]),s._v(\" \"),a(\"h2\",{attrs:{id:\"slice和数组\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#slice和数组\"}},[s._v(\"#\")]),s._v(\" slice 和数组❓\")]),s._v(\" \"),a(\"ul\",[a(\"li\",[s._v(\"slice 操作共同的底层数组\")])]),s._v(\" \"),a(\"div\",{staticClass:\"language-go line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-go\"}},[a(\"code\",[s._v(\"arr \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":=\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"10\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),a(\"span\",{pre:!0,attrs:{class:\"token builtin\"}},[s._v(\"int\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"0\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"1\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"2\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"3\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"4\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"5\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"6\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"7\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"8\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"9\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// 左闭右开\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"var\")]),s._v(\" s1 \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),a(\"span\",{pre:!0,attrs:{class:\"token builtin\"}},[s._v(\"int\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" arr\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"1\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\":\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"4\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// [1 2 3] len = 3 cap = 9(直接到头)\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"var\")]),s._v(\" s2 \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),a(\"span\",{pre:!0,attrs:{class:\"token builtin\"}},[s._v(\"int\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" arr\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"7\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\":\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),s._v(\"  \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// [7 8 9] len = 3 cap = 3\")]),s._v(\"\\n\")])]),s._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),a(\"br\")])]),a(\"p\",[a(\"img\",{attrs:{src:\"https://sjc04pap001files.storage.live.com/y4m_JObVgiveqloMZlsk2bLRIQAdPnfOTSrjQNh4NkHW1yS0pkqUtehdctGMgwK1o1WBHt-gZIZeMkECQs1ygchwggvoGTaB4stl2ybEjOAjkMplaD1rkAxm9UJK-CfVn3gUi7CBh7FJ8sv1x0OLhB2-OrcOADBECIQ8ngmCnRcNnAQTyIxRQv4OU5AwinSjomv?width=660&height=151&cropmode=none\",alt:\"\"}})]),s._v(\" \"),a(\"ul\",[a(\"li\",[s._v(\"再给 s2 添加元素\\n\"),a(\"ul\",[a(\"li\",[s._v(\"开辟新的底层数组\")]),s._v(\" \"),a(\"li\",[s._v(\"拷贝原来的底层数组（s2 所使用的部分）\")]),s._v(\" \"),a(\"li\",[s._v(\"再添加新的元素\")]),s._v(\" \"),a(\"li\",[s._v(\"修改 len 和 cap\")])])])]),s._v(\" \"),a(\"div\",{staticClass:\"language-go line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-go\"}},[a(\"code\",[s._v(\"s2 \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"append\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"s2\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"10\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \\n\")])]),s._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),a(\"br\")])]),a(\"p\",[a(\"img\",{attrs:{src:\"https://sjc04pap001files.storage.live.com/y4mH1dEuMsDz21ZkZvNXtc-nAwSpRRHmDxsvnKWjktJjuSPIb3mHTfz8As5ddTTGy5i2WoRMTbXIz56aA1NS2edXt99lFzX-gtJDXhr-zBwj3f1sGeNSCO3hSAGc-UX3-XU_dKrR6s1uLW1SShBbhJe1tFohIXXG_PqobnnItGF2UdZk3_8qMc-aelimDW5U0l0?width=535&height=453&cropmode=none\",alt:\"\"}})]),s._v(\" \"),a(\"h2\",{attrs:{id:\"扩容规则\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#扩容规则\"}},[s._v(\"#\")]),s._v(\" 扩容规则❓\")]),s._v(\" \"),a(\"h3\",{attrs:{id:\"_1-预估拓容后容量-元素个数\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_1-预估拓容后容量-元素个数\"}},[s._v(\"#\")]),s._v(\" 1. 预估拓容后容量（元素个数）\")]),s._v(\" \"),a(\"div\",{staticClass:\"language-go line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-go\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// go 1.9.5 src/runtime/slice.go:82\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"func\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"growslice\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"et \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"*\")]),s._v(\"_type\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" old slice\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token builtin\"}},[s._v(\"cap\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token builtin\"}},[s._v(\"int\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" slice \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// ……\")]),s._v(\"\\n    newcap \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":=\")]),s._v(\" old\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token builtin\"}},[s._v(\"cap\")]),s._v(\"\\n    doublecap \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":=\")]),s._v(\" newcap \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"+\")]),s._v(\" newcap\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"if\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token builtin\"}},[s._v(\"cap\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\">\")]),s._v(\" doublecap \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n        newcap \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token builtin\"}},[s._v(\"cap\")]),s._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"else\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n        \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"if\")]),s._v(\" old\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token builtin\"}},[s._v(\"len\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"<\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"1024\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n            newcap \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" doublecap\\n        \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"else\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n            \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"for\")]),s._v(\" newcap \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"<\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token builtin\"}},[s._v(\"cap\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n                newcap \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"+=\")]),s._v(\" newcap \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"/\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"4\")]),s._v(\"\\n            \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n        \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// ……\")]),s._v(\"\\n\\n    capmem \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"roundupsize\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"uintptr\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"newcap\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"*\")]),s._v(\" ptrSize\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"\\n    newcap \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"int\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"capmem \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"/\")]),s._v(\" ptrSize\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\")])]),s._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"9\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"10\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"11\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"12\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"13\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"14\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"15\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"16\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"17\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"18\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"19\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"20\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"21\")]),a(\"br\")])]),a(\"p\",[s._v(\"如果只看前半部分，现在网上各种文章里说的  \"),a(\"code\",[s._v(\"newcap\")]),s._v(\"  的规律是对的。现实是，后半部分还对  \"),a(\"code\",[s._v(\"newcap\")]),s._v(\"  作了一个 \"),a(\"code\",[s._v(\"内存对齐\")]),s._v(\" ，这个和内存分配策略相关。进行内存对齐之后，新 slice 的容量是要  \"),a(\"code\",[s._v(\"大于等于\")]),s._v(\"  老 slice 容量的  \"),a(\"code\",[s._v(\"2倍\")]),s._v(\" 或者 \"),a(\"code\",[s._v(\"1.25倍\")]),s._v(\" 。\")]),s._v(\" \"),a(\"p\",[s._v(\"之后，向 Go 内存管理器申请内存，将老 slice 中的数据复制过去，并且将 append 的元素添加到新的底层数组中。\")]),s._v(\" \"),a(\"p\",[s._v(\"最后，向  \"),a(\"code\",[s._v(\"growslice\")]),s._v(\"  函数调用者返回一个新的 slice，这个 slice 的长度并没有变化，而容量却增大了。\")]),s._v(\" \"),a(\"ol\",[a(\"li\",[s._v(\"如果期望容量大于当前容量的两倍就会使用期望容量；\")]),s._v(\" \"),a(\"li\",[s._v(\"如果当前切片的长度小于 1024 就会将容量翻倍；\")]),s._v(\" \"),a(\"li\",[s._v(\"如果当前切片的长度大于 1024 ，由于有内存对齐，每次会大于原定的 1.25 一点；\")])]),s._v(\" \"),a(\"div\",{staticClass:\"language-go line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-go\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// 如果期望容量大于当前容量的两倍就会使用期望容量；\")]),s._v(\"\\nints \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":=\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),a(\"span\",{pre:!0,attrs:{class:\"token builtin\"}},[s._v(\"int\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"1\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"2\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\nints \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"appned\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"ints\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"3\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"4\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"5\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// 此时ints len = 2，翻倍后 = 4，而期望容量是 2 + 3 = 5\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// 也就是望容量大于当前容量的两倍\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// 此时容量 = 期望容量 = 5\")]),s._v(\"\\n\")])]),s._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),a(\"br\")])]),a(\"h3\",{attrs:{id:\"_2-判断内存大小\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2-判断内存大小\"}},[s._v(\"#\")]),s._v(\" 2. 判断内存大小\")]),s._v(\" \"),a(\"p\",[s._v(\"第一步的预估容量仅是个数，实际的元素还要考虑大小，也就是\"),a(\"strong\",[s._v(\"容量 = 元素个数 * 元素类型大小\")])]),s._v(\" \"),a(\"h3\",{attrs:{id:\"_3-匹配到合适的内存规格\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_3-匹配到合适的内存规格\"}},[s._v(\"#\")]),s._v(\" 3. 匹配到合适的内存规格\")]),s._v(\" \"),a(\"ul\",[a(\"li\",[s._v(\"流程：容量 <---\\x3e Go 语言内存管理模块 <---\\x3e 操作系统\")])]),s._v(\" \"),a(\"p\",[s._v(\"​\\t当然并不是直接分配计算出的容量就 ok 了，在多数编程语言中，\"),a(\"strong\",[s._v(\"申请分配内存并不是直接与操作系统交涉\")]),s._v(\"，而是与语言自身实现的\"),a(\"strong\",[s._v(\"内存管理模块\")]),s._v(\"，内存管理模块会提前向操作系统申请一块内存，一般是 2 的整数倍（8、16、32、64、80、96、112...）然后分成常用的规格管理起来，申请内存时会\"),a(\"strong\",[s._v(\"匹配到足够大且接近\")]),s._v(\"的内存\")]),s._v(\" \"),a(\"h3\",{attrs:{id:\"小练习\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#小练习\"}},[s._v(\"#\")]),s._v(\" 小练习\")]),s._v(\" \"),a(\"p\",[a(\"img\",{attrs:{src:\"https://sjc04pap001files.storage.live.com/y4mKZMHFbBS1gSwh1TwRERHNgDSXOXCpB7HVTLJlBkjBifcf51bViZfKjl-y9DKRlLW5NISqM06NatHqtk2EYzcadZke3O3oZu63YQ44i63v4F2fh-Btjl5Y-d8lANzRR-tOlEweDqWJbf7p8SlI1I7m8sIjVtbDuWw3Ey9eFbJn1cLWUaOOH5VR_i5ZspS3o1N?width=660&height=410&cropmode=none\",alt:\"\"}})])])}),[],!1,null,null,null);t.default=e.exports}}]);","extractedComments":[]}