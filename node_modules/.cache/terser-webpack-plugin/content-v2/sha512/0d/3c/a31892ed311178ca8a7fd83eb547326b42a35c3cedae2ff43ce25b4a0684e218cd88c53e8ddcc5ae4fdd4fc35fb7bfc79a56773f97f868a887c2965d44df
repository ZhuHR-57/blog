{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{506:function(t,s,a){\"use strict\";a.r(s);var n=a(41),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":t.$parent.slotKey}},[a(\"div\",{staticClass:\"custom-block tip\"},[a(\"p\",{staticClass:\"custom-block-title\"},[t._v(\"提示\")]),t._v(\" \"),a(\"p\",[t._v(\"KMP\")])]),t._v(\" \"),a(\"h2\",{attrs:{id:\"kmp\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#kmp\"}},[t._v(\"#\")]),t._v(\" KMP\")]),t._v(\" \"),a(\"h3\",{attrs:{id:\"前置知识\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#前置知识\"}},[t._v(\"#\")]),t._v(\" 前置知识\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[a(\"p\",[a(\"code\",[t._v(\"文本串\")]),t._v(' ：\"aabaabaaf\"【普通字符串】')])]),t._v(\" \"),a(\"li\",[a(\"p\",[a(\"code\",[t._v(\"模式串\")]),t._v(' ：\"aabaaf\"【待匹配的字符串】')])]),t._v(\" \"),a(\"li\",[a(\"p\",[a(\"code\",[t._v(\"前缀（prefix）\")]),t._v(\" ：文本串中\"),a(\"strong\",[t._v(\"包含首字符\")]),t._v('，不包含尾字符的字符串【ex:\"aabaaf\"】')]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"a\")]),t._v(\" \"),a(\"li\",[t._v(\"aa\")]),t._v(\" \"),a(\"li\",[t._v(\"aab\")]),t._v(\" \"),a(\"li\",[t._v(\"aaba\")]),t._v(\" \"),a(\"li\",[t._v(\"aabaa\")]),t._v(\" \"),a(\"li\",[t._v(\"aabaa\"),a(\"strong\",[t._v(\"f\")]),t._v(\"（❌）\")])])]),t._v(\" \"),a(\"li\",[a(\"p\",[a(\"code\",[t._v(\"后缀（suffix）\")]),t._v(\" ：文本串中不包含首字符，\"),a(\"strong\",[t._v(\"包含尾字符\")]),t._v('的字符串【ex:\"aabaaf\"】')]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"f\")]),t._v(\" \"),a(\"li\",[t._v(\"af\")]),t._v(\" \"),a(\"li\",[t._v(\"aaf\")]),t._v(\" \"),a(\"li\",[t._v(\"baaaf\")]),t._v(\" \"),a(\"li\",[t._v(\"abaaf\")]),t._v(\" \"),a(\"li\",[a(\"strong\",[t._v(\"a\")]),t._v(\"abaaf（❌）\")])])]),t._v(\" \"),a(\"li\",[a(\"p\",[a(\"code\",[t._v(\"最长相等前后缀\")]),t._v(' ：就是前缀等于后缀【ex:\"aabaaf\"】')]),t._v(\" \"),a(\"table\",[a(\"thead\",[a(\"tr\",[a(\"th\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"字符串\")]),t._v(\" \"),a(\"th\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"前缀\")]),t._v(\" \"),a(\"th\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"后缀\")]),t._v(\" \"),a(\"th\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"最长相等前后缀\")])])]),t._v(\" \"),a(\"tbody\",[a(\"tr\",[a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"a\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"无\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"无\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"0\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"aa\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[a(\"strong\",[t._v(\"a\")])]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[a(\"strong\",[t._v(\"a\")])]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"1\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"aab\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"a aa\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"b ab\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"0\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"aaba\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[a(\"strong\",[t._v(\"a\")]),t._v(\" aa aab\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[a(\"strong\",[t._v(\"a\")]),t._v(\" ba aba\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"1\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"aabaa\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[a(\"strong\",[t._v(\"a aa\")]),t._v(\" aab aaba\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[a(\"strong\",[t._v(\"a aa\")]),t._v(\" baa abaa\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"2\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"aabaaf\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"aaa aab aaba aabaa\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"f af aaf baaf abaaf\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"0\")])])])])]),t._v(\" \"),a(\"li\",[a(\"p\",[a(\"code\",[t._v(\"前缀表\")]),t._v(\" ：存放字符串中最长相等前后缀的\"),a(\"strong\",[t._v(\"数组\")]),t._v(\"，用于匹配失败后跳转到的位置（\"),a(\"strong\",[t._v(\"KMP 核心\")]),t._v(\"）‼️\")]),t._v(\" \"),a(\"table\",[a(\"thead\",[a(\"tr\",[a(\"th\",[t._v(\"内容\")]),t._v(\" \"),a(\"th\",[t._v(\"a\")]),t._v(\" \"),a(\"th\",[t._v(\"a\")]),t._v(\" \"),a(\"th\",[t._v(\"b\")]),t._v(\" \"),a(\"th\",[t._v(\"a\")]),t._v(\" \"),a(\"th\",[t._v(\"a\")]),t._v(\" \"),a(\"th\",[t._v(\"f\")])])]),t._v(\" \"),a(\"tbody\",[a(\"tr\",[a(\"td\",[t._v(\"下标\")]),t._v(\" \"),a(\"td\",[t._v(\"0\")]),t._v(\" \"),a(\"td\",[t._v(\"1\")]),t._v(\" \"),a(\"td\",[t._v(\"0\")]),t._v(\" \"),a(\"td\",[t._v(\"1\")]),t._v(\" \"),a(\"td\",[t._v(\"2\")]),t._v(\" \"),a(\"td\",[t._v(\"0\")])])])])]),t._v(\" \"),a(\"li\",[a(\"p\",[a(\"code\",[t._v(\"前缀头\")]),t._v(' ：【ex:\"aabaaf\"】中 \"'),a(\"strong\",[t._v(\"a\")]),t._v('abaaf\"')])]),t._v(\" \"),a(\"li\",[a(\"p\",[a(\"code\",[t._v(\"后缀尾\")]),t._v(' ：【ex:\"aabaaf\"】中 \"a'),a(\"strong\",[t._v(\"a\")]),t._v('baaf\"')])])]),t._v(\" \"),a(\"h3\",{attrs:{id:\"能解决什么问题\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#能解决什么问题\"}},[t._v(\"#\")]),t._v(\" 能解决什么问题？\")]),t._v(\" \"),a(\"p\",[t._v(\"大段字符串中，\"),a(\"strong\",[t._v(\"匹配某一小段的字符串\")]),t._v(\"，类似 \"),a(\"code\",[t._v(\"Ctrl+F\")]),t._v(\"  的搜索功能\")]),t._v(\" \"),a(\"p\",[t._v(\"普通的比较，需要一段一段的比较完后移在比较...\")]),t._v(\" \"),a(\"p\",[t._v('文本串:\"aabaabaaf\"')]),t._v(\" \"),a(\"p\",[t._v('模式串:\"aabaaf\"')]),t._v(\" \"),a(\"blockquote\",[a(\"p\",[t._v(\"​      a a b a a b a a f 的匹配过程如下：\")]),t._v(\" \"),a(\"ol\",[a(\"li\",[t._v(\"a a b a a f(❌)，整体后移\")]),t._v(\" \"),a(\"li\",[t._v(\"a a b a a f(❌)，整体后移\")]),t._v(\" \"),a(\"li\",[t._v(\"a a b a a f(❌)，整体后移\")]),t._v(\" \"),a(\"li\",[t._v(\"a a b a a f(✔️)，完成匹配\")])])]),t._v(\" \"),a(\"p\",[t._v(\"这显然效率非常低，KMP 算法就是解决了这个问题，核心是不像普通算法的\"),a(\"strong\",[t._v(\"只向后移一位\")]),t._v(\"，KMP 通过\"),a(\"strong\",[t._v(\" next 数组\")]),t._v(\"，可以一次移多位来提交效率\")]),t._v(\" \"),a(\"h3\",{attrs:{id:\"next数组\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#next数组\"}},[t._v(\"#\")]),t._v(\" next 数组\")]),t._v(\" \"),a(\"p\",[a(\"code\",[t._v(\"目的\")]),t._v(\" ：求模式串的前缀表\")]),t._v(\" \"),a(\"p\",[a(\"code\",[t._v(\"步骤\")]),t._v(\" ：\")]),t._v(\" \"),a(\"ol\",[a(\"li\",[t._v(\"初始化\")]),t._v(\" \"),a(\"li\",[t._v(\"处理前缀不相同\")]),t._v(\" \"),a(\"li\",[t._v(\"处理前缀相同\")]),t._v(\" \"),a(\"li\",[t._v(\"更新 next 数组\")])]),t._v(\" \"),a(\"div\",{staticClass:\"language-cpp line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-cpp\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// next为next数组\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// str为模式串\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"void\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"getNext\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"int\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"*\")]),t._v(\"next\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"string str\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 1. 初始化\")]),t._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"int\")]),t._v(\" p \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"0\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"   \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 前缀头 和 最长前后缀相同值\")]),t._v(\"\\n    next\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"0\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"0\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 第一个字符没有前缀和后缀，故为0\")]),t._v(\"\\n    \\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 遍历真个模式串,从1开始因为第一个字符最长前后缀相同值为0\")]),t._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"for\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"int\")]),t._v(\" s \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"pos \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"<\")]),t._v(\" str\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"size\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"++\")]),t._v(\"pos\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// s为后缀尾\")]),t._v(\"\\n        \\n        \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 2,处理前缀不相同\")]),t._v(\"\\n        \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"while\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"str\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),t._v(\"s\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"!=\")]),t._v(\" str\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),t._v(\"p\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"&&\")]),t._v(\" p \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\">\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"0\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n            \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 回退\")]),t._v(\"\\n            p \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" next\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),t._v(\"p \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),t._v(\"；\\n        \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n        \\n        \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 3. 处理前缀相同\")]),t._v(\"\\n        \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"if\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"str\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),t._v(\"s\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"==\")]),t._v(\" str\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),t._v(\"p\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n            \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"++\")]),t._v(\"p\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n        \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n        \\n        \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 4. 更新next数组\")]),t._v(\"\\n        next\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),t._v(\"s\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" p\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\")])]),t._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[t._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"3\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"4\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"5\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"6\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"7\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"8\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"9\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"10\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"11\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"12\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"13\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"14\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"15\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"16\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"17\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"18\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"19\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"20\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"21\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"22\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"23\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"24\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"25\")]),a(\"br\")])]),a(\"p\",[t._v(\"最终得到：\")]),t._v(\" \"),a(\"p\",[a(\"img\",{attrs:{src:\"https://sjc04pap001files.storage.live.com/y4mHK-VEa_KttMxupVq5me9NLXezCNKNGSiWcy0IFYlK1zDL7ZDokFNZRIDTtgmnQ3zwwgxgD5cZ58PqZIAizTlPF9lMQMsfFKbKCmZoyXQQ9y0wmbUMYfVpO5NMUWOgkhLm6Lsu4B6vir1lvjuqEEoF1XSC9TJqk5kNCFvYO1_h_BSkp4GcZRBzTttBy8stmRy?width=554&height=292&cropmode=none\",alt:\"\"}})]),t._v(\" \"),a(\"h3\",{attrs:{id:\"完整的kmp流程\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#完整的kmp流程\"}},[t._v(\"#\")]),t._v(\" 完整的 KMP 流程\")]),t._v(\" \"),a(\"p\",[a(\"img\",{attrs:{src:\"https://public.by.files.1drv.com/y4mEkbszxN5FaLl6tvquhtZyYC6aIxdyY7GCkUP4vtbaOLvVLE9iefFkSluRjT0Yd76IyFhFNI13JL_oEmMh96cv51JGi0X5E77Vn5iXO4UJUNuHUGkqKonLWMnIjmym8mMl5IZTrrEjq5qXboBlovpHZyyWPQJCDhYFqFbGPylx5Ys4GDuelJ8E3a1y5OjHv_N1ZWWWRa6PdEZ6rSsmcmTR-B1vvuNHX8EV5qD6qX7Etk\",alt:\"\"}})]),t._v(\" \"),a(\"div\",{staticClass:\"language-cpp line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-cpp\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"class\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"Solution\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"public\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"int\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"strStr\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"string haystack\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" string needle\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n\\n        \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"int\")]),t._v(\" needleLen \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" needle\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"size\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n        \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"int\")]),t._v(\" haystackLen \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" haystack\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"size\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n        \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"int\")]),t._v(\" next\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),t._v(\"needleLen\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\\n        \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 求出next数组\")]),t._v(\"\\n        \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"getNext\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"next\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"needle\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\\n        \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 遍历\")]),t._v(\"\\n        \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// i 控制文本串\")]),t._v(\"\\n        \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// j 控制模式串\")]),t._v(\"\\n        \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"for\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"int\")]),t._v(\" i \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"0\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"j \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"0\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\" i \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"<\")]),t._v(\" haystackLen\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"++\")]),t._v(\"i\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n            \\n            \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 匹配不相等\")]),t._v(\"\\n            \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"while\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"haystack\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),t._v(\"i\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"!=\")]),t._v(\" needle\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),t._v(\"j\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"&&\")]),t._v(\" j \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\">\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"0\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n                j \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" next\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),t._v(\"j \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n            \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\\n            \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 匹配\")]),t._v(\"\\n            \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"if\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"haystack\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),t._v(\"i\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"==\")]),t._v(\" needle\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),t._v(\"j\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n                j\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"++\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n            \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\\n            \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 以满足返回\")]),t._v(\"\\n            \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"if\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"j \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"==\")]),t._v(\" needleLen\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n                \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// i = 8\")]),t._v(\"\\n                \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// needleLen = 6\")]),t._v(\"\\n                \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// ans = 3\")]),t._v(\"\\n\\n                \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"return\")]),t._v(\" i \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),t._v(\" needleLen \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"+\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n            \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n        \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\\n        \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"return\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 求next数组\")]),t._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"void\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"getNext\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"int\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"*\")]),t._v(\"next\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"string needle\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n\\n        \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"int\")]),t._v(\" p \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"0\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 定义前缀头和记录最长相等前后缀记录\")]),t._v(\"\\n        next\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"0\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"0\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\\n        \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 定义后缀表尾和控制整体模式串\")]),t._v(\"\\n        \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"for\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"int\")]),t._v(\" s \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"s \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"<\")]),t._v(\" needle\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"size\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"++\")]),t._v(\"s\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n            \\n            \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 不匹配时，回退\")]),t._v(\"\\n            \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"while\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"p \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\">\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"0\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"&&\")]),t._v(\" needle\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),t._v(\"p\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"!=\")]),t._v(\" needle\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),t._v(\"s\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n                p \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" next\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),t._v(\"p\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n            \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\\n            \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 匹配\")]),t._v(\"\\n            \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"if\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"needle\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),t._v(\"p\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"==\")]),t._v(\" needle\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),t._v(\"s\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n                \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"++\")]),t._v(\"p\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n            \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\\n            \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 更新\")]),t._v(\"\\n            next\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),t._v(\"s\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" p\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n        \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\")])]),t._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[t._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"3\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"4\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"5\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"6\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"7\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"8\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"9\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"10\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"11\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"12\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"13\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"14\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"15\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"16\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"17\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"18\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"19\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"20\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"21\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"22\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"23\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"24\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"25\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"26\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"27\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"28\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"29\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"30\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"31\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"32\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"33\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"34\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"35\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"36\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"37\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"38\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"39\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"40\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"41\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"42\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"43\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"44\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"45\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"46\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"47\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"48\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"49\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"50\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"51\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"52\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"53\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"54\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"55\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"56\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"57\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"58\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"59\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"60\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"61\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"62\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"63\")]),a(\"br\")])])])}),[],!1,null,null,null);s.default=e.exports}}]);","extractedComments":[]}