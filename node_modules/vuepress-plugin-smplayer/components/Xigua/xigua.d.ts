import type { VNode } from "vue";
import "./xigua.css";
declare const _default: import("vue").DefineComponent<{
    xid: {
        type: StringConstructor;
        default: null;
        required: true;
    };
    id: {
        type: StringConstructor;
        default: null;
        required: false;
    };
    autoplay: {
        type: BooleanConstructor;
        default: boolean | undefined;
        required: false;
    };
    startTime: {
        type: NumberConstructor;
        default: number | undefined;
        required: false;
    };
    width: {
        type: StringConstructor;
        default: string | number | undefined;
        required: false;
    };
    height: {
        type: (StringConstructor | NumberConstructor)[];
        default: string | number | undefined;
        required: false;
    };
    ratio: {
        type: (StringConstructor | NumberConstructor)[];
        default: number | undefined;
    };
}, () => VNode[], unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    xid: {
        type: StringConstructor;
        default: null;
        required: true;
    };
    id: {
        type: StringConstructor;
        default: null;
        required: false;
    };
    autoplay: {
        type: BooleanConstructor;
        default: boolean | undefined;
        required: false;
    };
    startTime: {
        type: NumberConstructor;
        default: number | undefined;
        required: false;
    };
    width: {
        type: StringConstructor;
        default: string | number | undefined;
        required: false;
    };
    height: {
        type: (StringConstructor | NumberConstructor)[];
        default: string | number | undefined;
        required: false;
    };
    ratio: {
        type: (StringConstructor | NumberConstructor)[];
        default: number | undefined;
    };
}>>, {
    startTime: number;
    ratio: string | number;
    id: string;
    height: string | number;
    width: string;
    autoplay: boolean;
    xid: string;
}>;
export default _default;
