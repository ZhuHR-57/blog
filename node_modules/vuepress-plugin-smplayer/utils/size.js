// https://github.com/vuepress-theme-hope/vuepress-theme-hope/blob/9da8e75194ae1bab88b8eb554fdb4aeea4d5f615/packages/components/src/client/composables/size.ts
import { useEventListener } from "@vueuse/core";
import { computed, onMounted, isRef, ref, unref, watch } from "vue";
const getValue = (value) => typeof value === "string" ? value : `${value}px`;
export const useSize = (options, extraHeight = 0) => {
    const el = ref();
    const width = computed(() => getValue(unref(options.width) || "100%"));
    const height = ref("auto");
    const getRadio = (radio) => {
        if (typeof radio === "string") {
            const [width, height] = radio.split(":");
            const parsedRadio = Number(width) / Number(height);
            if (!Number.isNaN(parsedRadio))
                return parsedRadio;
        }
        return typeof radio === "number" ? radio : 16 / 9;
    };
    const getHeight = (width) => {
        const height = unref(options.height);
        const ratio = getRadio(unref(options.ratio));
        return height
            ? getValue(height)
            : `${Number(width) / ratio + unref(extraHeight)}px`;
    };
    const updateHeight = () => {
        if (el.value)
            height.value = getHeight(el.value.clientWidth);
    };
    onMounted(() => {
        updateHeight();
        if (isRef(extraHeight))
            watch(extraHeight, () => updateHeight());
        useEventListener("orientationchange", () => updateHeight());
        useEventListener("resize", () => updateHeight());
    });
    return {
        el,
        width,
        height,
    };
};
