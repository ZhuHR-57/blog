{"remainingRequest":"E:\\Blog\\Blog_Home_New\\node_modules\\babel-loader\\lib\\index.js??ref--3-1!E:\\Blog\\Blog_Home_New\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??ref--6!E:\\Blog\\Blog_Home_New\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!E:\\Blog\\Blog_Home_New\\node_modules\\vue-loader\\lib\\index.js??ref--1-1!E:\\Blog\\Blog_Home_New\\node_modules\\@vuepress\\markdown-loader\\index.js??ref--1-2!E:\\Blog\\Blog_Home_New\\docs\\04.分享\\04.English\\01.Grammar.md?vue&type=template&id=f02b8f58","dependencies":[{"path":"E:\\Blog\\Blog_Home_New\\docs\\04.分享\\04.English\\01.Grammar.md","mtime":1699592681304},{"path":"E:\\Blog\\Blog_Home_New\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1703385242301},{"path":"E:\\Blog\\Blog_Home_New\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1703385242301},{"path":"E:\\Blog\\Blog_Home_New\\node_modules\\babel-loader\\lib\\index.js","mtime":1703385241749},{"path":"E:\\Blog\\Blog_Home_New\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1703385243426},{"path":"E:\\Blog\\Blog_Home_New\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1703385242301},{"path":"E:\\Blog\\Blog_Home_New\\node_modules\\vue-loader\\lib\\index.js","mtime":1703385243426},{"path":"E:\\Blog\\Blog_Home_New\\node_modules\\@vuepress\\markdown-loader\\index.js","mtime":1703385242069}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}