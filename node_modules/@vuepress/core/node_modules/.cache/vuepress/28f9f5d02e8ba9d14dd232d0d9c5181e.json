{"remainingRequest":"F:\\Blog\\Blog_Home_New\\node_modules\\babel-loader\\lib\\index.js??ref--3-1!F:\\Blog\\Blog_Home_New\\node_modules\\vuepress-plugin-smplayer\\components\\Xgplayer\\XgplayerComponent.js","dependencies":[{"path":"F:\\Blog\\Blog_Home_New\\node_modules\\vuepress-plugin-smplayer\\components\\Xgplayer\\XgplayerComponent.js","mtime":1673497851912},{"path":"F:\\Blog\\Blog_Home_New\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1673497485656},{"path":"F:\\Blog\\Blog_Home_New\\node_modules\\babel-loader\\lib\\index.js","mtime":1673497485408}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiRjovQmxvZy9CbG9nX0hvbWVfTmV3L25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RTcHJlYWQyLmpzIjsKaW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIkY6L0Jsb2cvQmxvZ19Ib21lX05ldy9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvci5qcyI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKaW1wb3J0IFhncGxheWVyIGZyb20gIi4vWGdwbGF5ZXIiOwppbXBvcnQgVnVlIGZyb20gInZ1ZSI7CmltcG9ydCBtZXJnZSBmcm9tICJ0cy1kZWVwbWVyZ2UiOwpleHBvcnQgZGVmYXVsdCBWdWUuZXh0ZW5kKHsKICBwcm9wczogewogICAgc3JjOiB7CiAgICAgIHR5cGU6IE9iamVjdCwKICAgICAgcmVxdWlyZWQ6IHRydWUKICAgIH0sCiAgICBvbjogewogICAgICB0eXBlOiBPYmplY3QsCiAgICAgICJkZWZhdWx0IjogZnVuY3Rpb24gX2RlZmF1bHQoKSB7CiAgICAgICAgcmV0dXJuIFhHUExBWUVSLm9uOwogICAgICB9LAogICAgICByZXF1aXJlZDogZmFsc2UKICAgIH0sCiAgICB3aWR0aDogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgICJkZWZhdWx0IjogWEdQTEFZRVIud2lkdGgsCiAgICAgIHJlcXVpcmVkOiBmYWxzZQogICAgfSwKICAgIGhlaWdodDogewogICAgICB0eXBlOiBBcnJheSwKICAgICAgImRlZmF1bHQiOiBmdW5jdGlvbiBfZGVmYXVsdCgpIHsKICAgICAgICByZXR1cm4gWEdQTEFZRVIuaGVpZ2h0OwogICAgICB9LAogICAgICByZXF1aXJlZDogZmFsc2UKICAgIH0KICB9LAogIHJlbmRlcjogZnVuY3Rpb24gcmVuZGVyKCkgewogICAgdmFyIGggPSBhcmd1bWVudHNbMF07CiAgICByZXR1cm4gaCgiZGl2IiwgewogICAgICAiY2xhc3MiOiAic21wbGF5ZXIiCiAgICB9LCBbaCgiZGl2IiwgewogICAgICAicmVmIjogInNicGxheWVyIiwKICAgICAgInN0eWxlIjogIndpZHRoOiAiLmNvbmNhdCh0aGlzLndpZHRoKQogICAgfSldKTsKICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBwbGF5ZXI6IHt9CiAgICB9OwogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgdmFyIG9uLCBzcmM7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBvbiA9IG1lcmdlKFhHUExBWUVSLm9uLCBfdGhpcy5vbik7CiAgICAgICAgICAgICAgc3JjID0gX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKHt9LCBtZXJnZShYR1BMQVlFUi5zcmMsIF90aGlzLnNyYykpLCB7fSwgewogICAgICAgICAgICAgICAgZWw6IF90aGlzLiRyZWZzLnNicGxheWVyCiAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgX3RoaXMucGxheWVyID0gbmV3IFhncGxheWVyKHNyYyk7CiAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDU7CiAgICAgICAgICAgICAgcmV0dXJuIF90aGlzLnBsYXllci5Jbml0UGxheWVyKCk7CgogICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgICAgX3RoaXMucGxheWVyLkFkZE9uRXZlbnQob24pOwoKICAgICAgICAgICAgY2FzZSA2OgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlKTsKICAgIH0pKSgpOwogIH0sCiAgYmVmb3JlRGVzdHJveTogZnVuY3Rpb24gYmVmb3JlRGVzdHJveSgpIHsKICAgIHZhciBfdGhpcyRwbGF5ZXI7CgogICAgKF90aGlzJHBsYXllciA9IHRoaXMucGxheWVyKSA9PT0gbnVsbCB8fCBfdGhpcyRwbGF5ZXIgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF90aGlzJHBsYXllci5EZXN0cm95UGxheWVyKCk7CiAgfQp9KTs="},{"version":3,"sources":["F:/Blog/Blog_Home_New/node_modules/vuepress-plugin-smplayer/components/Xgplayer/XgplayerComponent.js"],"names":["Xgplayer","Vue","merge","extend","props","src","type","Object","required","on","XGPLAYER","width","String","height","Array","render","data","player","mounted","el","$refs","sbplayer","InitPlayer","AddOnEvent","beforeDestroy","DestroyPlayer"],"mappings":";;;AAAA,OAAOA,QAAP,MAAqB,YAArB;AACA,OAAOC,GAAP,MAAgB,KAAhB;AACA,OAAOC,KAAP,MAAkB,cAAlB;AACA,eAAeD,GAAG,CAACE,MAAJ,CAAW;AACtBC,EAAAA,KAAK,EAAE;AACHC,IAAAA,GAAG,EAAE;AACDC,MAAAA,IAAI,EAAEC,MADL;AAEDC,MAAAA,QAAQ,EAAE;AAFT,KADF;AAKHC,IAAAA,EAAE,EAAE;AACAH,MAAAA,IAAI,EAAEC,MADN;AAEA,iBAAS;AAAA,eAAMG,QAAQ,CAACD,EAAf;AAAA,OAFT;AAGAD,MAAAA,QAAQ,EAAE;AAHV,KALD;AAUHG,IAAAA,KAAK,EAAE;AACHL,MAAAA,IAAI,EAAEM,MADH;AAEH,iBAASF,QAAQ,CAACC,KAFf;AAGHH,MAAAA,QAAQ,EAAE;AAHP,KAVJ;AAeHK,IAAAA,MAAM,EAAE;AACJP,MAAAA,IAAI,EAAEQ,KADF;AAEJ,iBAAS;AAAA,eAAMJ,QAAQ,CAACG,MAAf;AAAA,OAFL;AAGJL,MAAAA,QAAQ,EAAE;AAHN;AAfL,GADe;AAsBtBO,EAAAA,MAtBsB,oBAsBb;AAAA;AACL;AAAA,eAAmB;AAAnB;AAAA,aACS,UADT;AAAA,gCACqC,KAAKJ,KAD1C;AAAA;AAGH,GA1BqB;AA2BtBK,EAAAA,IA3BsB,kBA2Bf;AACH,WAAO;AACHC,MAAAA,MAAM,EAAE;AADL,KAAP;AAGH,GA/BqB;AAgChBC,EAAAA,OAhCgB,qBAgCN;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACRT,cAAAA,EADQ,GACHP,KAAK,CAACQ,QAAQ,CAACD,EAAV,EAAc,KAAI,CAACA,EAAnB,CADF;AAERJ,cAAAA,GAFQ,mCAGLH,KAAK,CAACQ,QAAQ,CAACL,GAAV,EAAe,KAAI,CAACA,GAApB,CAHA;AAIRc,gBAAAA,EAAE,EAAE,KAAI,CAACC,KAAL,CAAWC;AAJP;AAMZ,cAAA,KAAI,CAACJ,MAAL,GAAc,IAAIjB,QAAJ,CAAaK,GAAb,CAAd;AANY;AAAA,qBAON,KAAI,CAACY,MAAL,CAAYK,UAAZ,EAPM;;AAAA;AAQZ,cAAA,KAAI,CAACL,MAAL,CAAYM,UAAZ,CAAuBd,EAAvB;;AARY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASf,GAzCqB;AA0CtBe,EAAAA,aA1CsB,2BA0CN;AAAA;;AACZ,yBAAKP,MAAL,8DAAaQ,aAAb;AACH;AA5CqB,CAAX,CAAf","sourcesContent":["import Xgplayer from \"./Xgplayer\";\nimport Vue from \"vue\";\nimport merge from \"ts-deepmerge\";\nexport default Vue.extend({\n    props: {\n        src: {\n            type: Object,\n            required: true,\n        },\n        on: {\n            type: Object,\n            default: () => XGPLAYER.on,\n            required: false,\n        },\n        width: {\n            type: String,\n            default: XGPLAYER.width,\n            required: false,\n        },\n        height: {\n            type: Array,\n            default: () => XGPLAYER.height,\n            required: false,\n        },\n    },\n    render() {\n        return (<div class=\"smplayer\">\n        <div ref=\"sbplayer\" style={`width: ${this.width}`}/>\n      </div>);\n    },\n    data() {\n        return {\n            player: {},\n        };\n    },\n    async mounted() {\n        let on = merge(XGPLAYER.on, this.on);\n        let src = {\n            ...merge(XGPLAYER.src, this.src),\n            el: this.$refs.sbplayer,\n        };\n        this.player = new Xgplayer(src);\n        await this.player.InitPlayer();\n        this.player.AddOnEvent(on);\n    },\n    beforeDestroy() {\n        this.player?.DestroyPlayer();\n    },\n});\n"]}]}