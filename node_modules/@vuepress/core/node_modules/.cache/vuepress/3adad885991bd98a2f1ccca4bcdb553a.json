{"remainingRequest":"F:\\Blog\\Blog_Home_New\\node_modules\\babel-loader\\lib\\index.js??ref--3-1!F:\\Blog\\Blog_Home_New\\node_modules\\vuepress-plugin-smplayer\\components\\Xgplayer\\Xgplayer.js","dependencies":[{"path":"F:\\Blog\\Blog_Home_New\\node_modules\\vuepress-plugin-smplayer\\components\\Xgplayer\\Xgplayer.js","mtime":1673497851912},{"path":"F:\\Blog\\Blog_Home_New\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1673497485656},{"path":"F:\\Blog\\Blog_Home_New\\node_modules\\babel-loader\\lib\\index.js","mtime":1673497485408}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["F:/Blog/Blog_Home_New/node_modules/vuepress-plugin-smplayer/components/Xgplayer/Xgplayer.js"],"names":["Xgplayer","src","type","url","toLowerCase","endsWith","importXg","importJs","Promise","all","then","xgplayer","customInit","player","destroy","on","Object","keys","forEach","key"],"mappings":"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","sourcesContent":["export default class Xgplayer {\n    constructor(src) {\n        if (src) {\n            this.src = src;\n        }\n    }\n    src;\n    player;\n    async InitPlayer() {\n        if (this.src) {\n            if (!this.src?.type && typeof this.src?.url == \"string\") {\n                if (this.src.url.toLowerCase().endsWith(\".m3u8\")) {\n                    this.src.type = \"hls\";\n                }\n                else if (this.src.url.toLowerCase().endsWith(\".flv\")) {\n                    this.src.type = \"flv\";\n                }\n                else if (this.src.url.toLowerCase().endsWith(\".mpd\")) {\n                    this.src.type = \"shaka\";\n                }\n            }\n            let importJs;\n            let importXg = import(\"xgplayer/dist/index.js\");\n            if (this.src?.type && typeof this.src.type == \"string\") {\n                switch (this.src.type.toLowerCase()) {\n                    case \"hls\":\n                    case \"m3u8\":\n                        importJs = Promise.all([\n                            import(\"xgplayer-hls.js/dist/index.js\"),\n                            importXg,\n                        ]);\n                        break;\n                    case \"flv\":\n                        importJs = Promise.all([\n                            import(\"xgplayer-flv.js/dist/index.js\"),\n                            importXg,\n                        ]);\n                        break;\n                    case \"dash\":\n                        importJs = Promise.all([\n                            import(\"xgplayer-dash/dist/index.js\"),\n                            importXg,\n                        ]);\n                        break;\n                    case \"shakadash\":\n                    case \"shaka\":\n                    case \"shaka-dash\":\n                        importJs = Promise.all([\n                            import(\"xgplayer-shaka/dist/index.js\"),\n                            importXg,\n                        ]);\n                        break;\n                    case \"music\":\n                        importJs = Promise.all([\n                            import(\"xgplayer-music/dist/index.js\"),\n                            importXg,\n                        ]);\n                        break;\n                    default:\n                        importJs = import(\"xgplayer/dist/index.js\");\n                }\n            }\n            else {\n                importJs = Promise.all([importXg]);\n            }\n            return await importJs.then(async ([{ default: xgplayer }]) => {\n                this.player = this.src?.customInit\n                    ? await this.src.customInit(xgplayer, this.src).then((player) => {\n                        return player;\n                    })\n                    : new xgplayer(this.src);\n                return this.player;\n            });\n        }\n    }\n    DestroyPlayer() {\n        this.player?.destroy();\n    }\n    AddOnEvent(on) {\n        if (on && this.player) {\n            Object.keys(on).forEach((key) => {\n                this.player.on(key, () => on[key](this.player, this.src));\n            });\n        }\n    }\n}\n"]}]}